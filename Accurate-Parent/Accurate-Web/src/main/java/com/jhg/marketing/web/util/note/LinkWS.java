package com.jhg.marketing.web.util.note;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "LinkWS", targetNamespace = "http://tempuri.org/", wsdlLocation = "https://sdk2.028lk.com/sdk2/LinkWS.asmx?wsdl")
public class LinkWS
    extends Service
{

    private final static URL LINKWS_WSDL_LOCATION;
    private final static WebServiceException LINKWS_EXCEPTION;
    private final static QName LINKWS_QNAME = new QName("http://tempuri.org/", "LinkWS");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://sdk2.028lk.com/sdk2/LinkWS.asmx?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        LINKWS_WSDL_LOCATION = url;
        LINKWS_EXCEPTION = e;
    }

    public LinkWS() {
        super(__getWsdlLocation(), LINKWS_QNAME);
    }

    public LinkWS(WebServiceFeature... features) {
        super(__getWsdlLocation(), LINKWS_QNAME, features);
    }

    public LinkWS(URL wsdlLocation) {
        super(wsdlLocation, LINKWS_QNAME);
    }

    public LinkWS(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, LINKWS_QNAME, features);
    }

    public LinkWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LinkWS(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns LinkWSSoap
     */
    @WebEndpoint(name = "LinkWSSoap")
    public LinkWSSoap getLinkWSSoap() {
        return super.getPort(new QName("http://tempuri.org/", "LinkWSSoap"), LinkWSSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LinkWSSoap
     */
    @WebEndpoint(name = "LinkWSSoap")
    public LinkWSSoap getLinkWSSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "LinkWSSoap"), LinkWSSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns LinkWSSoap
     */
    @WebEndpoint(name = "LinkWSSoap12")
    public LinkWSSoap getLinkWSSoap12() {
        return super.getPort(new QName("http://tempuri.org/", "LinkWSSoap12"), LinkWSSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LinkWSSoap
     */
    @WebEndpoint(name = "LinkWSSoap12")
    public LinkWSSoap getLinkWSSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "LinkWSSoap12"), LinkWSSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns LinkWSHttpGet
     */
    @WebEndpoint(name = "LinkWSHttpGet")
    public LinkWSHttpGet getLinkWSHttpGet() {
        return super.getPort(new QName("http://tempuri.org/", "LinkWSHttpGet"), LinkWSHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LinkWSHttpGet
     */
    @WebEndpoint(name = "LinkWSHttpGet")
    public LinkWSHttpGet getLinkWSHttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "LinkWSHttpGet"), LinkWSHttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns LinkWSHttpPost
     */
    @WebEndpoint(name = "LinkWSHttpPost")
    public LinkWSHttpPost getLinkWSHttpPost() {
        return super.getPort(new QName("http://tempuri.org/", "LinkWSHttpPost"), LinkWSHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LinkWSHttpPost
     */
    @WebEndpoint(name = "LinkWSHttpPost")
    public LinkWSHttpPost getLinkWSHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "LinkWSHttpPost"), LinkWSHttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (LINKWS_EXCEPTION!= null) {
            throw LINKWS_EXCEPTION;
        }
        return LINKWS_WSDL_LOCATION;
    }

}
